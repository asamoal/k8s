kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-provisioner-s3
  labels: {}
  annotations: {}
  namespace: ozone
spec:
  serviceName: csi-provisioner-s3
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-provisioner-s3
      annotations: {}
    spec:
      serviceAccount: csi-provisioner-sa
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v0.4.1
          args:
            - --provisioner=ch.ctrox.csi.s3-driver
            - --csi-address=$(ADDRESS)
            - --v=4
          env:
            - name: "ADDRESS"
              value: "/var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver/csi.sock"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
          envFrom: []
        - name: csi-s3
          image: ctrox/csi-s3:1.0.1-alpha
          args:
            - --endpoint=$(CSI_ENDPOINT)
            - --nodeid=$(NODE_ID)
            - --access-key-id=$(ACCESS_KEY_ID)
            - --secret-access-key=$(SECRET_ACCESS_KEY)
            - --s3-endpoint=$(S3_ENDPOINT)
            - --region=$(REGION)
            - --encryption-key=$(ENCRYPTION_KEY)
            - --v=4
          env:
            - name: "CSI_ENDPOINT"
              value: "unix:///var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver/csi.sock"
            - name: "NODE_ID"
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: "ACCESS_KEY_ID"
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: accessKeyID
            - name: "SECRET_ACCESS_KEY"
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: secretAccessKey
            - name: "S3_ENDPOINT"
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: endpoint
            - name: "REGION"
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: region
            - name: "ENCRYPTION_KEY"
              valueFrom:
                secretKeyRef:
                  name: csi-s3-secret
                  key: encryptionKey
          imagePullPolicy: Always
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/ch.ctrox.csi.s3-driver
          envFrom: []
      volumes:
        - name: socket-dir
          emptyDir: {}
