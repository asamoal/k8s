apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  creationTimestamp: null
  name: hdfs-datanode
spec:
  podManagementPolicy: Parallel
  replicas: 3
  selector: null
  serviceName: hdfs-datanode
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/cli edge-18.12.4
        linkerd.io/proxy-version: edge-18.12.4
      creationTimestamp: null
      labels:
        app: hdfs
        component: datanode
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/proxy-statefulset: hdfs-datanode
    spec:
      containers:
      - args:
        - hdfs
        - datanode
        env:
        - name: WAITFOR
          value: hdfs-namenode-0.hdfs-namenode:9820
        envFrom:
        - configMapRef:
            name: hdfs-config
        image: flokkr/hadoop
        name: hdfs-datanode
        resources: {}
      - env:
        - name: LINKERD2_PROXY_LOG
          value: warn,linkerd2_proxy=info
        - name: LINKERD2_PROXY_BIND_TIMEOUT
          value: 10s
        - name: LINKERD2_PROXY_CONTROL_URL
          value: tcp://linkerd-proxy-api.linkerd.svc.cluster.local:8086
        - name: LINKERD2_PROXY_CONTROL_LISTENER
          value: tcp://0.0.0.0:4190
        - name: LINKERD2_PROXY_METRICS_LISTENER
          value: tcp://0.0.0.0:4191
        - name: LINKERD2_PROXY_OUTBOUND_LISTENER
          value: tcp://127.0.0.1:4140
        - name: LINKERD2_PROXY_INBOUND_LISTENER
          value: tcp://0.0.0.0:4143
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: .
        - name: LINKERD2_PROXY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/linkerd-io/proxy:edge-18.12.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        name: linkerd-proxy
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-metrics
        readinessProbe:
          httpGet:
            path: /metrics
            port: 4191
          initialDelaySeconds: 10
        resources: {}
        securityContext:
          runAsUser: 2102
        terminationMessagePolicy: FallbackToLogsOnError
      initContainers:
      - args:
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - 4190,4191
        image: gcr.io/linkerd-io/proxy-init:edge-18.12.4
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          privileged: false
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - configMap:
          name: hdfs-config
        name: config
      - emptyDir: {}
        name: data
  updateStrategy:
    type: RollingUpdate
status:
  replicas: 0
---
